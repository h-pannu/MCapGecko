@page "/"
@inject ICoinService CoinService

<PageTitle>Index</PageTitle>

<div class="col-md-12 col-lg-12">
    <div class="tab-content" id="v-pills-tabContent">
        <div class="tab-pane fade show active" id="settings-profile" role="tabpanel"
             aria-labelledby="settings-profile-tab">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Show the price of A with the market cap of B</h5>
                    <div class="settings-profile">
                        <form>
                            <div class="form-row">
                                <div class="col-md-12">
                                    <coingecko-coin-price-marquee-widget coin-ids="bitcoin,ethereum,eos,ripple,litecoin" currency="usd" background-color="#ffffff" locale="en"></coingecko-coin-price-marquee-widget>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-5">
                                    <label for="securityOne">Coin A</label>
                                    <div id="container">
                                        <SfSpinner @bind-Visible="@SpinnerVisible">
                                        </SfSpinner>
                                    </div>
                                    <SfDropDownList TValue="string" TItem="Coin" ShowClearButton=true Placeholder="Select Coin A" AllowFiltering=true Query="@Query" EnableVirtualization=true>
                                        <SfDataManager Json="@CoinListA" Adaptor="Adaptors.JsonAdaptor" Offline=true>
                                        </SfDataManager>
                                        <DropDownListEvents TItem="Coin" TValue="string" ValueChange="@ValueChangeHandlerA"></DropDownListEvents>
                                        <DropDownListFieldSettings Value="id" Text="name"></DropDownListFieldSettings>
                                        <DropDownListTemplates TItem="Coin">
                                            <ItemTemplate>
                                                <div>
                                                    @*<div class="aaa">@((context as Coin).market_cap_rank) </div>*@
                                                    <img class="empImage" src="@((context as Coin).image)" alt="employee" />
                                                    <div class="ename">@((context as Coin).name) </div>
                                                    <div class="job"> @((context as Coin).symbol)</div>
                                                </div>
                                            </ItemTemplate>
                                            @* <HeaderTemplate>
                                            <div class="header"> <span>Market Rank</span> <span>Photo</span> <span class="info">Coin Info</span></div>
                                            </HeaderTemplate>*@
                                            <ValueTemplate>
                                                <div class="dropdown-width" style="width:100%;height:100%;">
                                                    <img class="value" src="@((context as Coin).image)" height="40" width="40" alt="Coin">
                                                    <div class="name">@((context as Coin).name) $@((context as Coin).current_price) </div>
                                                </div>
                                            </ValueTemplate>
                                            <NoRecordsTemplate>
                                                <span class='norecord'> NO DATA AVAILABLE</span>
                                            </NoRecordsTemplate>
                                        </DropDownListTemplates>
                                    </SfDropDownList>
                                    <button type="button" @onclick="@OnBtnClick">Show Chart A</button>
                                    <SfDialog Target="#target" Width="810px" MinHeight="770" Height="770px" AllowPrerender=true EnableResize=true IsModal=true ShowCloseIcon="true" @bind-Visible="Visibility">
                                        <DialogTemplates>
                                            <Header>Hello</Header>
                                            <Content>
                                                @if (Visibility)
                                                {
                                                    @*<iframe width="700" height="530" src="https://s.tradingview.com/widgetembed/?frameElementId=tradingview_44ae2&symbol=BINANCEUS%3ABONEUSDT&interval=D&symboledit=1&saveimage=1&toolbarbg=f1f3f6&studies=%5B%5D&theme=dark&style=1&timezone=America%2FLos_Angeles&showpopupbutton=1&studies_overrides=%7B%7D&overrides=%7B%7D&enabled_features=%5B%5D&disabled_features=%5B%5D&showpopupbutton=1&locale=en&utm_source=localhost&utm_medium=widget&utm_campaign=chart&utm_term=BINANCEUS%3ABONEUSDT" frameborder="0"></iframe>*@
                                                    <div class="form-row">
                                                        <div class="col-md-6">
                                                            <coingecko-coin-ticker-widget coin-id="@SelectedCoinA.id" currency="usd" locale="en"></coingecko-coin-ticker-widget>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <coingecko-coin-ticker-widget coin-id="@SelectedCoinB.id" currency="usd" locale="en"></coingecko-coin-ticker-widget>
                                                        </div>
                                                    </div>
                                                    <div class="form-row">
                                                        <div class="col-md-12">
                                                            <coingecko-coin-compare-chart-widget coin-ids="@SelectedCoinA.id,@SelectedCoinB.id" currency="usd" locale="en"></coingecko-coin-compare-chart-widget>
                                                        </div>
                                                    </div>
                                                }
                                            </Content>
                                        </DialogTemplates>
                                    </SfDialog>
                                </div>
                                <div class="col-md-2">
                                    <div style="text-align:center;">
                                        <sfbutton type="button" @onclick="SwapCoins">
                                            <img src="_content/MCapGecko.SharedUI/assets/img/466154.png" width="60" height="60">
                                            </sfbutton>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <label for="securityOne">Coin B</label>
                                    <SfDropDownList TValue="string" TItem="Coin" ShowClearButton=true Placeholder="Select Coin B" EnableVirtualization="true" Query="@Query" AllowFiltering=true>
                                        <SfDataManager Json="@CoinListB" Adaptor="Adaptors.JsonAdaptor" Offline=true>
                                        </SfDataManager>
                                        <DropDownListEvents TItem="Coin" TValue="string" ValueChange="@ValueChangeHandlerB"></DropDownListEvents>
                                        <DropDownListFieldSettings Value="id" Text="name"></DropDownListFieldSettings>
                                        <DropDownListTemplates TItem="Coin">
                                            <ItemTemplate>
                                                <div>
                                                    @*<div class="aaa">@((context as Coin).market_cap_rank) </div>*@
                                                    <img class="empImage" src="@((context as Coin).image)" alt="Coin" />
                                                    <div class="ename">@((context as Coin).name) </div>
                                                    <div class="job"> @((context as Coin).symbol)</div>
                                                </div>
                                            </ItemTemplate>
                                            @*<HeaderTemplate>
                                                <div class="header"> <span>Market Rank</span> <span>Photo</span> <span class="info">Coin Info</span></div>
                                            </HeaderTemplate>*@
                                            <ValueTemplate>
                                                <div class="dropdown-width" style="width:100%;height:100%;">
                                                    <img class="value" src="@((context as Coin).image)" height="40" width="40" alt="employee">
                                                    <div class="name">@((context as Coin).name) $@((context as Coin).current_price)</div>
                                                </div>
                                            </ValueTemplate>
                                            <NoRecordsTemplate>
                                                <span class='norecord'> NO DATA AVAILABLE</span>
                                            </NoRecordsTemplate>
                                        </DropDownListTemplates>
                                    </SfDropDownList>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="d-flexi justify-content-center" hidden="@IsHideResultDiv">
    <div class="form-access my-auto">
        <form>
            <div class="form-group">
                <span><label>@SelectedCoinA.name</label> with the market cap of <label>@SelectedCoinB.name</label></span>
            </div>
            <span><img src="@SelectedCoinA.image" alt="@SelectedCoinA.name" height="30" width="30" /><label>@EstimatedPriceA</label> <label>(@EstimatedXA)</label></span>
        </form>
    </div>
</div>

<style>
    #target {
        height: 500px;
    }

    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .header {
        font-weight: 600;
        color: rgba(0, 0, 0, .54);
        height: 48px;
        padding: 15px 0 0 16px;
        font-size: 16px;
        background-color: #f5f5f5;
        font-family: "Segoe UI", "GeezaPro", "DejaVu Serif";
    }

    .fluent-dark .header {
        background: #252423;
        color: #2899F5;
    }

    .bootstrap5-dark .header {
        background: #343A40;
        color: #7B848D;
    }

    .fluent .header {
        color: #2899F5;
    }

    .fabric .header {
        background-color: #fff;
        border-bottom: 1px solid #ccc;
        color: #0078d7;
        font-weight: 400;
    }

    .bootstrap .header {
        background-color: #f5f5f5;
        border-bottom: 1px solid #ccc;
        color: #777;
        font-family: "Helvetica Neue", "Helvetica", "Arial", "sans-serif";
        font-weight: 600;
        font-size: 15px;
        height: 48px;
        padding: 15px 0 0 16px;
    }

    .e-bigger.bootstrap .header {
        height: 44px;
        font-size: 13px;
    }

    .highcontrast .header {
        color: #fff;
        background-color: #000;
    }

    .bootstrap4 .header {
        color: #6c757d;
    }

    .bootstrap .info,
    .e-bigger.bootstrap .info {
        margin-left: 25px;
    }

    .bootstrap .job {
        opacity: .54;
        font-size: 14px;
        margin-top: -25px;
        margin-bottom: 20px;
    }

    .e-bigger.bootstrap .job {
        font-size: 15px;
        margin-top: -18px;
        margin-bottom: 17px;
    }

    .bootstrap .ename {
        font-size: 15px;
        margin-top: 20px;
        opacity: .87;
        padding: 3px 0 20px;
    }

    .e-bigger.bootstrap .ename {
        font-size: 16px;
        padding-bottom: 15px;
        line-height: 1.063em;
    }

    .bootstrap .empImage,
    .e-bigger.bootstrap .empImage {
        margin: 0px 10px 0 20px;
    }

    .bootstrap .value,
    .bootstrap4 .value,
    .bootstrap-dark .value {
        margin-top: 3px;
        margin-left: 3px;
    }

    .e-bigger.bootstrap .value {
        margin-top: 5px;
        margin-left: 5px;
    }

    .bootstrap .name,
    .bootstrap4 .name,
    .bootstrap-dark .name {
        padding: 7px 42px;
    }

    .e-bigger.bootstrap .name {
        padding: 8px 42px;
    }

    .info {
        margin-left: 34px;
    }

    .ename {
        display: block !important;
        opacity: .87;
        font-size: 16px;
        margin-top: 8px;
    }

    .name {
        padding: 12px 80px;
        opacity: .87;
    }

    .price {
        padding: 1px 200px;
        opacity: .87;
    }

    .job {
        opacity: .54;
        font-size: 14px;
        margin-top: -15px;
        margin-bottom: 7px;
    }

    .empImage {
        margin: 6px 16px;
        float: left;
        width: 50px;
        height: 50px;
    }

    .value {
        border-radius: 50%;
        float: left;
        margin-top: 2px;
        margin-left: 2px;
    }

    .e-bigger:not(.bootstrap) .value {
        margin-top: 5px;
    }

    .e-bigger:not(.bootstrap) .name {
        padding: 8px 42px;
    }

    .template.e-popup .e-list-item * {
        display: block;
        text-indent: 0;
    }

    .e-bigger:not(.bootstrap) .template .e-dropdownbase .e-list-item {
        line-height: 42px;
        height: 80px;
    }

    .e-bigger:not(.bootstrap) .template.e-popup .empImage {
        margin: 10px 16px;
    }

    .bootstrap4 .template.e-popup .empImage {
        margin: 0px 16px;
    }

    .bootstrap4 .template.e-popup .job,
    .bootstrap5 .template.e-popup .job,
    .bootstrap-dark .template.e-popup .job,
    .bootstrap5-dark .template.e-popup .job,
    .tailwind .template.e-popup .job,
    .tailwind-dark .template.e-popup .job {
        margin-top: 0;
    }

    .e-bigger.bootstrap4 .template.e-popup .job,
    .e-bigger.bootstrap5 .template.e-popup .job,
    .e-bigger.bootstrap-dark .template.e-popup .job,
    .e-bigger.bootstrap5-dark .template.e-popup .job,
    .e-bigger.tailwind .template.e-popup .job,
    .e-bigger.tailwind-dark .template.e-popup .job {
        margin-top: -15px;
    }

    .template .e-dropdownbase.e-content {
        max-height: 200px !important;
    }

    .dropdown-width {
        width: 100%;
        height: 100%;
    }
</style>

@code {

    private bool Visibility { get; set; } = false;

    private async void OnBtnClick()
    {
        this.Visibility = true;
    }

    private bool IsHideResultDiv { get; set; } = true;
    private bool SpinnerVisible { get; set; } = false;


    public Query Query = new Query().Select(new List<string> { "id", "name" }).Take(25).RequiresCount();

    public Coin SelectedCoinA { get; set; } = new Coin();
    public Coin SelectedCoinB { get; set; } = new Coin();
    public Coin SwapCoinC { get; set; } = new Coin();
    public string EstimatedPriceA { get; set; } = string.Empty;
    public string EstimatedXA { get; set; } = string.Empty;

    List<Coin> CoinListA { get; set; } = new List<Coin>();
    List<Coin> CoinListB { get; set; } = new List<Coin>();
    protected override async Task OnInitializedAsync()
    {
        SpinnerVisible = true;
        CoinListA = await CoinService.GetCoins();
        CoinListB = CoinListA;
        SpinnerVisible = false;
    }

    private void ShowChartA()
    {

    }

    private async void SwapCoins()
    {
        SwapCoinC = SelectedCoinB;
        SelectedCoinB = SelectedCoinA;
        SelectedCoinA = SelectedCoinB;

    }

    private void ValueChangeHandlerA(ChangeEventArgs<string, Coin> args)
    {
        SelectedCoinA = args.ItemData;
    }

    private void ValueChangeHandlerB(ChangeEventArgs<string, Coin> args)
    {
        SelectedCoinB = args.ItemData;

        var x = (SelectedCoinB.market_cap is null ? 0 : (Double)SelectedCoinB.market_cap) / (SelectedCoinA.market_cap is null ? 0 : (Double)SelectedCoinA.market_cap);
        EstimatedXA = Convert.ToString(Math.Round(x, 2) + "X");
        var t = Convert.ToDecimal(SelectedCoinA.current_price * x).ToString("0.#####"); ;
        EstimatedPriceA = "$ " + Convert.ToString(t);

        IsHideResultDiv = false;
    }
}
